<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: C# | rohan singh]]></title>
  <link href="http://www.rohanradio.com/blog/categories/c-/atom.xml" rel="self"/>
  <link href="http://www.rohanradio.com/"/>
  <updated>2012-01-29T13:53:23+01:00</updated>
  <id>http://www.rohanradio.com/</id>
  <author>
    <name><![CDATA[Rohan Singh]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[ConfigurationProperty Code Snippet (C#)]]></title>
    <link href="http://www.rohanradio.com/blog/2010/07/21/configuration-property-code-snippet-c-sharp/"/>
    <updated>2010-07-21T16:52:00+02:00</updated>
    <id>http://www.rohanradio.com/blog/2010/07/21/configuration-property-code-snippet-c-sharp</id>
    <content type="html"><![CDATA[<p>If you've ever wanted to create a <a href="http://msdn.microsoft.com/en-us/library/2tw134k3.aspx">custom configuration section for a .NET
app</a>,
you know how tedious it is to type this out:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="k">namespace</span> <span class="nn">Samples.AspNet</span>
</span><span class='line'><span class="p">{&lt;/</span><span class="n">p</span><span class="p">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">&lt;</span><span class="n">pre</span><span class="p">&gt;&lt;</span><span class="n">code</span><span class="p">&gt;</span><span class="k">public</span> <span class="k">class</span> <span class="nc">PageAppearanceSection</span> <span class="p">:</span> <span class="n">ConfigurationSection</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="c1">// Create a &quot;remoteOnly&quot; attribute.</span>
</span><span class='line'><span class="na">    [ConfigurationProperty(&quot;remoteOnly&quot;, DefaultValue = &quot;false&quot;, IsRequired = false)]</span>
</span><span class='line'>    <span class="k">public</span> <span class="n">Boolean</span> <span class="n">RemoteOnly</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">get</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="k">return</span> <span class="p">(</span><span class="n">Boolean</span><span class="p">)</span><span class="k">this</span><span class="p">[</span><span class="s">&quot;remoteOnly&quot;</span><span class="p">];</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">set</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="k">this</span><span class="p">[</span><span class="s">&quot;remoteOnly&quot;</span><span class="p">]</span> <span class="p">=</span> <span class="k">value</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Create a &quot;font&quot; element.</span>
</span><span class='line'><span class="na">    [ConfigurationProperty(&quot;font&quot;)]</span>
</span><span class='line'>    <span class="k">public</span> <span class="n">FontElement</span> <span class="n">Font</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">get</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="k">return</span> <span class="p">(</span><span class="n">FontElement</span><span class="p">)</span><span class="k">this</span><span class="p">[</span><span class="s">&quot;font&quot;</span><span class="p">];</span> <span class="p">}</span>
</span><span class='line'>        <span class="k">set</span>
</span><span class='line'>        <span class="p">{</span> <span class="k">this</span><span class="p">[</span><span class="s">&quot;font&quot;</span><span class="p">]</span> <span class="p">=</span> <span class="k">value</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">&lt;/</span><span class="n">code</span><span class="p">&gt;&lt;/</span><span class="n">pre</span><span class="p">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">&lt;</span><span class="n">p</span><span class="p">&gt;...</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>There's a much faster way to create normal properties. If you've ever <a href="http://www.onesoft.dk/post/The-prop-snippet-and-Visual-Studio-2008.aspx">used the
prop code snippet to create a property</a>,
you already know this. You can just type "prop" and hit tab to have an entir
property filled out for you:</p>

<p><img src="/images/blog/prop-snippet.png"></p>

<p>Faced with the daunting task of creating some custom configuration elements, I
threw together a code snippet that lets you do the same for a
configuration-backed property. I can now just type "propc" and hit tab to get
this:</p>

<p><img src="/images/blog/config-prop-snippet.png"></p>

<p>Then I just fill out the name and type and call it good. If you'd like to join
in on the propc goodness here's the source of the snippet file. Just download
and save it as a <strong>.snippet</strong> file and import it through <strong>Tools</strong> |
<strong>Code Snippets Manager</strong> in Visual Studio:</p>

<p><div><script src='https://gist.github.com/1410807.js?file='></script>
<noscript><pre><code>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;CodeSnippets xmlns=&quot;http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet&quot;&gt;
	&lt;CodeSnippet Format=&quot;1.0.0&quot;&gt;
		&lt;Header&gt;
			&lt;Shortcut&gt;propc&lt;/Shortcut&gt;
			&lt;Title&gt;propc&lt;/Title&gt;
			&lt;Author&gt;Rohan Singh&lt;/Author&gt;
			&lt;Description&gt;
				Code snippet for a configuration-backed property
			&lt;/Description&gt;
			&lt;SnippetTypes&gt;
				&lt;SnippetType&gt;Expansion&lt;/SnippetType&gt;
			&lt;/SnippetTypes&gt;
		&lt;/Header&gt;
		&lt;Snippet&gt;
			&lt;Declarations&gt;
				&lt;Literal&gt;
					&lt;ID&gt;type&lt;/ID&gt;
					&lt;ToolTip&gt;Property type&lt;/ToolTip&gt;
					&lt;Default&gt;string&lt;/Default&gt;
				&lt;/Literal&gt;
				&lt;Literal&gt;
					&lt;ID&gt;configurationProperty&lt;/ID&gt;
					&lt;ToolTip&gt;Configuration property name&lt;/ToolTip&gt;
					&lt;Default&gt;myProperty&lt;/Default&gt;
				&lt;/Literal&gt;
				&lt;Literal&gt;
					&lt;ID&gt;isRequired&lt;/ID&gt;
					&lt;ToolTip&gt;Specifies whether the property is required&lt;/ToolTip&gt;
					&lt;Default&gt;true&lt;/Default&gt;
					&lt;Type&gt;System.Boolean&lt;/Type&gt;
				&lt;/Literal&gt;
				&lt;Literal&gt;
					&lt;ID&gt;property&lt;/ID&gt;
					&lt;ToolTip&gt;Property name&lt;/ToolTip&gt;
					&lt;Default&gt;MyProperty&lt;/Default&gt;
				&lt;/Literal&gt;
				&lt;Literal Editable=&quot;false&quot;&gt;
					&lt;ID&gt;SystemConfigurationConfigurationProperty&lt;/ID&gt;
					&lt;Function&gt;SimpleTypeName(global::System.Configuration.ConfigurationProperty)&lt;/Function&gt;
				&lt;/Literal&gt;
			&lt;/Declarations&gt;
			&lt;Code Language=&quot;CSharp&quot;&gt;&lt;![CDATA[[$SystemConfigurationConfigurationProperty$(&quot;$configurationProperty$&quot;, IsRequired = $isRequired$)]
	public $type$ $property$
	{
		get
		{
			return ($type$)this[&quot;$configurationProperty$&quot;];
		}
		set
		{
			this[&quot;$configurationProperty$&quot;] = value;
		}
	}
	$end$]]&gt;
			&lt;/Code&gt;
		&lt;/Snippet&gt;
	&lt;/CodeSnippet&gt;
&lt;/CodeSnippets&gt;</code></pre></noscript></div>
</p>
]]></content>
  </entry>
  
</feed>
